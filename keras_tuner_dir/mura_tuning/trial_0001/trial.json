{"trial_id": "0001", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "num_conv_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 5, "step": 1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "kernel_size_0", "default": 3, "conditions": [], "values": [3, 5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "max_pooling_size_0", "default": 2, "conditions": [], "values": [2, 3], "ordered": true}}, {"class_name": "Int", "config": {"name": "filters_0", "default": null, "conditions": [], "min_value": 16, "max_value": 128, "step": 16, "sampling": "linear"}}, {"class_name": "Boolean", "config": {"name": "batch_norm_0", "default": false, "conditions": []}}, {"class_name": "Float", "config": {"name": "dropout_0", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.4, "step": 0.1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "adam", "conditions": [], "values": ["adam", "sgd"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "adam_learning_rate", "default": 0.0001, "conditions": [], "values": [0.0001, 0.0005, 0.001, 0.005, 0.01], "ordered": true}}, {"class_name": "Choice", "config": {"name": "kernel_size_1", "default": 3, "conditions": [], "values": [3, 5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "max_pooling_size_1", "default": 2, "conditions": [], "values": [2, 3], "ordered": true}}, {"class_name": "Int", "config": {"name": "filters_1", "default": null, "conditions": [], "min_value": 16, "max_value": 128, "step": 16, "sampling": "linear"}}, {"class_name": "Boolean", "config": {"name": "batch_norm_1", "default": false, "conditions": []}}, {"class_name": "Float", "config": {"name": "dropout_1", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.4, "step": 0.1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "sgd_learning_rate", "default": 0.0001, "conditions": [], "values": [0.0001, 0.0005, 0.001, 0.005, 0.01], "ordered": true}}], "values": {"num_conv_layers": 1, "kernel_size_0": 3, "max_pooling_size_0": 2, "filters_0": 96, "batch_norm_0": false, "dropout_0": 0.4, "optimizer": "sgd", "adam_learning_rate": 0.001, "kernel_size_1": 3, "max_pooling_size_1": 3, "filters_1": 48, "batch_norm_1": true, "dropout_1": 0.2, "tuner/epochs": 2, "tuner/initial_epoch": 0, "tuner/bracket": 2, "tuner/round": 0, "sgd_learning_rate": 0.0001}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/Users/antonal/venv/lib/python3.11/site-packages/keras_tuner/src/engine/base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/Users/antonal/venv/lib/python3.11/site-packages/keras_tuner/src/engine/base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/antonal/venv/lib/python3.11/site-packages/keras_tuner/src/tuners/hyperband.py\", line 427, in run_trial\n    return super().run_trial(trial, *fit_args, **fit_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/antonal/venv/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/antonal/venv/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/antonal/venv/lib/python3.11/site-packages/keras_tuner/src/engine/hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/antonal/venv/lib/python3.11/site-packages/keras/src/utils/traceback_utils.py\", line 123, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"/Users/antonal/venv/lib/python3.11/site-packages/keras/src/layers/input_spec.py\", line 156, in assert_input_compatibility\n    raise ValueError(\nValueError: Layer 'functional_1' expected 1 input(s). Received 2 instead.\n"}